The scripts in this directory are used to stage a new release of WormBase 
on the development instance (or a dedicated development instance should that
be necessary).

See Google Drive / Slack for documentation:

https://wormbase.slack.com/archives/staging/p1426274090000007

The ancient controller sh follows for quick reference.


#!/bin/bash 

# Stage a new release of WormBase
# See complete documentation on the WormBase wiki.
#  http://wiki.wormbase.org/index.php/Software_Life_Cycle:_1._Updating_The_Development_Server

RELEASE=$1

if [ ! $RELEASE ]; then
   exit "Usage: $0 WSXXX"
fi
# 0.5. Remove the old acedmp directory
rm -rf /usr/local/wormbase/tmp/staging/acedmp

# 1. Mirror a new release from Sanger. (run under cron)
# ./steps/mirror_new_release.sh  // The next newest version will be discovered automatically.
#  OR
# END : mirror a new release from the Hinxton FTP site; in 0 days, 0 hours, 37 minutes and 25 seconds
./steps/mirror_new_release.sh  --release $RELEASE

# And update symlinks on the ftp site:
./steps/update_ftp_site_symlinks.pl --release $RELEASE --status development

# 2. Unpack AceDB
# END : unpack and customize acedb; in 0 days, 0 hours, 18 minutes and 20 seconds
./steps/unpack_acedb.pl --release $RELEASE

# 3. Create BLAST databases (requires ~ 5 minutes for 16 species)
./steps/create_blast_databases.pl --release $RELEASE

# 5. Load Genomic GFF databases
END : load genomic gff databases; in 0 days, 22 hours, 58 minutes and 28 seconds
./steps/load_genomic_gff_databases.pl --release $RELEASE

# 6. Load the clustal database
./steps/unpack_clustal_databases.pl --release $RELEASE

# 8. Compile Ontology Resources
./steps/compile_ontology_resources.pl --release $RELEASE

# 10. Create Widgets.ace file from wormbase_user database
./steps/create_widget_acedmp.pl --release $RELEASE

# Create gbrowse configuration files
./steps/create_gbrowse_configuration.pl --release $RELEASE

# 11. Create the xapian search database
# See xapian/README for information on doing this outside of the pipeline
./steps/build_xapian_db.pl --release $RELEASE

# mirror wikipathways images
./steps/mirror_wikipathways_images.pl --release $RELEASE

# 13. Check out new software to the staging server.

# 15. Push a newly staged version to development server(s).
#    If ANYTHING is wrong with the staged release,
#    this step will need to be repeated.

# First to the other staging nodes
./steps/push_staging_release_to_nodes.pl --release $RELEASE --target staging



# Development server(s)
./steps/adjust_symlinks.pl --release $RELEASE --target development

# 12. Create commonly requested files
# END : dump_annotations; in 0 days, 2 hours, 19 minutes and 59 seconds
./steps/dump_annotations.pl --release $RELEASE


# Tag software:
# No longer using
#shell> cd /path/to/your/repository
#shell> git branch --track WSXXX origin/master
#shell> git checkout WSXXX
#shell> git push origin WSXXX


# 14. Begin precaching content
./steps/precache_content.pl --release WSXXX


15. Send notification to staff that new release is available.


16. Rsync the ftp directory on the dev instance to the main FTP site

rsync -Cav /usr/local/ftp/pub/wormbase/releases/WS253 ftp.wormbase.org:/usr/local/ftp/pub/wormbase/releases/
rsync -Cav /usr/local/ftp/pub/wormbase/datasets-wormbase/ ftp.wormbase.org:/usr/local/ftp/pub/wormbase/datasets-wormbase/


17. Rsync GFF databases to the gbrowse host (gbrowse.wormbase.org)
./rsync_mysql_database_to_gbrowse_instance.pl --release WSXXX



18. Update the MongoDB with new labs, papers, people, and gene classes.

> wormbase_shoutout/bin/populate_or_update_database.pl --host localhost --port 2005 --class labs --release RELEASE
> wormbase_shoutout/bin/populate_or_update_database.pl --host localhost --port 2005 --class papers --release RELEASE
> wormbase_shoutout/bin/populate_or_update_database.pl --host localhost --port 2005 --class people --release RELEASE
> wormbase_shoutout/bin/populate_or_update_database.pl --host localhost --port 2005 --class gene_classes --release RELEASE

Dump out formatted report:

Post this information (at least the labs) to the blog.





# Create Intermine dump files and sync to the development host

> cd /home/tharris/projects/wormbase/intermine/website-intermine
> sudo mkdir /mnt/ephemeral0/intermine-builds/WS249
> sudo chown tharris:wormbase /mnt/ephemeral0/intermine-builds/WS249
> ./scripts/dump_ace.sh WS249

> scp -r WS247 im.wormbase.org:/media/ephemeral0/intermine-builds/.

