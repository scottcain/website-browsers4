user daemon;
worker_processes  5;
daemon on;

# Error log; other directives: notice | info
error_log  /usr/local/wormbase/logs/nginx-error.log warn;

# pid file (defaults to logs)
pid        /usr/local/wormbase/logs/nginx.pid;

events {
    # Workers will die after this many requests.
    worker_connections  1024;
}


http {
    server_names_hash_bucket_size 64;

    # Optional: set up the access log and define a format
#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';
#                      '"$http_user_agent" "$http_x_forwarded_for"';
    log_format  main  '$remote_addr - $remote_user [$time_local] $http_referer '
                      '"$http_user_agent" "$request" $status $body_bytes_sent ';



#130.219.235.248 - - [27/Sep/2011:16:17:01] http://www.wormbase.org/db/gene/variation?name=WBVar00089702;class=Variation "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50" "GET http://www.wormbase.org/db/misc/session?autoCompleteIsOn=ON HTTP/1.1" 200 331 TCP_MEM_HIT:NONE

#65.219.130.69 - - [27/Sep/2011:20:23:03 +0000] http://50.19.112.56/ "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1" "GET /db/misc/session?autoCompleteIsOn=ON HTTP/1.1" 200 39 access_log/usr/local/wormbase/logs/nginx-access.logmain

#143.48.52.204 - - [27/Sep/2011:20:03:03 +0000] "GET /favicon.ico HTTP/1.1" 200 2238 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.5; rv:6.0.2) Gecko/20100101 Firefox/6.0.2" "-"



    access_log /usr/local/wormbase/logs/nginx-access.log main;

    # log for cache hits.
    log_format cache '***$time_local '
	             '$upstream_cache_status '
                     'Cache-Control: $upstream_http_cache_control '
                     'Expires: $upstream_http_expires '
                     '"$request" ($status) '
		     '"$http_user_agent" ';
 
 
    # Load-balancing against a pool of fastcgi TCP sockets.
    # Simple load-balancing.
    # Define as many servers as we like (and weight them)
    upstream wormbase-classic  {
       # web1, 2, 3, 4, mining
       server 206.108.125.175:8080 weight=10 max_fails=2000 fail_timeout=1m;
       server 206.108.125.177:8080 weight=10 max_fails=2000 fail_timeout=1m;
       server 206.108.125.190:8080 weight=10 max_fails=2000 fail_timeout=1m;
       server 206.108.125.168:8080 weight=10 max_fails=2000 fail_timeout=1m;
       server 206.108.125.178:8080 weight=10 max_fails=2000 fail_timeout=1m;
    }

    # Load-balancing against a pool of starman sockets.
    # Define as many servers as we have here and weight them.
    upstream wormbase  {
       # TCP socket
       # server 127.0.0.1:20000   # or unix socket or hostname      

       # web1 () is our dedicated reverse proxy node but can also
       # act as a starman server.
#       server 206.108.125.175:5000 weight=10 max_fails=2000 fail_timeout=1m;

       # web2,3,4,mining
#       server 206.108.125.177:5000 weight=10 max_fails=2000 fail_timeout=1m;
#       server 206.108.125.190:5000 weight=10 max_fails=2000 fail_timeout=1m;
#       server 206.108.125.168:5000 weight=10 max_fails=2000 fail_timeout=1m;
#       server 206.108.125.178:5000 weight=10 max_fails=2000 fail_timeout=1m;

       # web7,8,9,10
       server 206.108.125.164:5000 weight=10 max_fails=2000 fail_timeout=1m;
       server 206.108.125.163:5000 weight=10 max_fails=2000 fail_timeout=1m;
       server 206.108.125.162:5000 weight=10 max_fails=2000 fail_timeout=1m;
       server 206.108.125.166:5000 weight=10 max_fails=2000 fail_timeout=1m;

       # web6 (165) is our dedicated couch server, but we can use it as a backup if needed.
       server 206.108.125.165:5000 backup;

       # Unix socket on localhost
       # server unix:/tmp/wormbase.sock;
    }


    upstream couchdb  {
       server 206.108.125.165:5984 weight=10 max_fails=2000 fail_timeout=1m;
#       server 206.108.125.164:5984 weight=10 max_fails=2000 fail_timeout=1m;
#       server 206.108.125.163:5984 weight=10 max_fails=2000 fail_timeout=1m;
#       server 206.108.125.162:5984 weight=10 max_fails=2000 fail_timeout=1m;
#       server 206.108.125.166:5984 weight=10 max_fails=2000 fail_timeout=1m;
#
#       # 165 is our dedicated couch server, but we can use it as a backup if needed.
#       server 206.108.125.165:5984 backup;

       # Unix socket on localhost
       # server unix:/tmp/wormbase.sock;
    }
              


    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


    ########################################
    #
    #     www.wormbase.org
    #
    ########################################
    server {
#    	   server_name wormbase.org www.wormbase.org;      
	   listen      80;

	   access_log /usr/local/wormbase/logs/www-cache.log cache;
      	   access_log /usr/local/wormbase/logs/www-access.log main;
      	   # Error log; other directives: notice | info
      	   error_log  /usr/local/wormbase/logs/www-error.log warn;

	   # Enable gzip compression
      	   # Turn off if we're sitting behind a caching server.
	   #      gzip             on;
	   #      gzip_min_length  1000;
	   #      gzip_proxied     any;
	   #      gzip_types       text/xml text/plain application/xml;

      	   include       mime.types;
      	   default_type  application/octet-stream;

 	   # LOCKDOWN
      	   # Only requests to our Host are allowed
#	   if ($host !~ ^(wormbase.org|www.wormbase.org)$ ) {      	   
#              return 444;
#      	   }

      	   # Only allow these request methods
      	   if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
              return 444;
      	   }
      
	   # Forums, blog, and wiki (all legacy as these are now subdomains)
      	   location /forums {
 	      rewrite forums(.*) http://forums.wormbase.org$1 permanent;
              # proxy_pass http://forums.wormbase.org/;
           }

           location /wiki {
 	      rewrite wiki(.*) http://wiki.wormbase.org$1 permanent;
              # proxy_pass http://wiki.wormbase.org/;
           }

      	   location /blog {
 	      rewrite blog(.*) http://blog.wormbase.org$1 permanent;
              # proxy_pass http://blog.wormbase.org/;
           }

      #error_page  404              /404.html;
      # redirect server error pages to the static page /50x.html
      #
      #   error_page   500 502 503 504  /50x.html;
      #   location = /50x.html {
      # root   html;
      # }

      # System Maintenance (Service Unavailable) 
      # Config broken?
#      if (-f $document_root/system_maintenance.html ) {
#        error_page 503 /system_maintenance.html;
#        return 503;
#      }

          # Show status information on /status
          location = /status {
              stub_status on;
              allow 127.0.0.1;
              deny all;
          }

       location / {
	    # Explore these proxy and proxy cache directives.
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Port 443; #this is important for Catalyst Apps!
          
            # Proxy pass to our pool of servers
	    proxy_pass http://wormbase-classic;
	    
#           proxy_redirect   off;
   	    client_max_body_size            0;
            client_body_buffer_size         128k;
	    proxy_send_timeout              120;
	    proxy_buffer_size               4k;
	    proxy_buffers                   4 32k;
  	    proxy_busy_buffers_size         64k;
 	    proxy_temp_file_write_size      64k;
 	    proxy_connect_timeout           75;
  	    proxy_read_timeout              205;

           # Caching diretives
#          proxy_cache_bypass $cookie___ac;
#          proxy_cache thecache;
#          proxy_cache_key $scheme$proxy_host$request_uri;

	   # Basic authentication
           #  auth_basic            "Restricted";
           # auth_basic_user_file  htpasswd;
        }

	# Serve static files directly from nginx
        location /stylesheets {
            root  /usr/local/wormbase/website/classic/html;
        }
        location /js {
            root  /usr/local/wormbase/website/classic/html;
        }

	# Mining
#acl mining url_regex get wb_query aql_query class_query batch_genes searches/advanced_dumper searches/epcr searches/strains cisortho blast_blat searches/blat


	# Dynamic images. This a really tedious way of doing this.
	location dynamic_images/wb-web1 {
	     proxy_pass http://206.108.125.175:8080/;
        }

	location dynamic_images/wb-web2 {
	     proxy_pass http://206.108.125.177:8080/;
        }

	location dynamic_images/wb-web3 {
	     proxy_pass http://206.108.125.190:8080/;
        }

	location dynamic_images/wb-web4 {
	     proxy_pass http://206.108.125.168:8080/;
        }

	location dynamic_images/wb-mining {
	     proxy_pass http://206.108.125.178:8080/;
        }

#        location /img {
#            root  /usr/local/wormbase/website/classic/root;
#        }

	# GBrowse support: this could probably be simplified.
        location /db/gb2 {
             proxy_pass http://206.108.125.173:80;
        }

        location /gbrowse2 {
             proxy_pass http://206.108.125.173:80;
        }

        location gb2-support {
             proxy_pass http://206.108.125.173:80;
        }

        location gbrowse2/css {
             proxy_pass http://206.108.125.173:80;
        }

        location gbrowse2/js {
             proxy_pass http://206.108.125.173:80;
        }

        location /gbrowse2/i/ {
             proxy_pass http://206.108.125.173:80;
        }

        location gbrowse_img {
             proxy_pass http://206.108.125.173:80;
        }
  }

  ##################################
  #
  #  Blog, forums, and wiki in case
  #  we want to host these locally.
  # 
  ##################################
#  server {
#       listen 80;
#       server_name blog.wormbase.org;
#       index       index.php index.html
#       root        /usr/local/wormbase/website/blog.wormbase.org/current
#       access_log /usr/local/wormbase/logs/blog-access.log main;
#       error_log  /usr/local/wormbase/logs/blog-error.log warn;
#  }

#  server {
#       listen 80;
#       server_name forums.wormbase.org;
#       index       index.php index.html
#       root        /usr/local/wormbase/website/forum.wormbase.org/current
#       access_log /usr/local/wormbase/logs/forum-access.log main;
#       error_log  /usr/local/wormbase/logs/forum-error.log warn;
#  }

#  server {
#       listen 80;
#       server_name wiki.wormbase.org;
#       index       index.php index.html
#       root        /usr/local/wormbase/website/wiki.wormbase.org/current
#       access_log /usr/local/wormbase/logs/wiki-access.log main;
#       error_log  /usr/local/wormbase/logs/wiki-error.log warn;
#  }


  ##################################
  #
  #  The beta website
  # 
  ##################################
  server {
#      server_name beta.wormbase.org;      
      listen      8000;  # This will need to be updated to 80 when we aren't behind squid anymore.
		       
      access_log /usr/local/wormbase/logs/beta-cache.log cache;
      access_log /usr/local/wormbase/logs/beta-access.log main;
      error_log  /usr/local/wormbase/logs/beta-error.log warn;

      # Enable gzip compression
      # Turn off if we're sitting behind a caching server.
#      gzip             on;
#      gzip_min_length  1000;
#      gzip_proxied     any;
#      gzip_types       text/xml text/plain application/xml;

      include       mime.types;
      default_type  application/octet-stream;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################      

      # Only requests to our Host are allowed
#      if ($host !~ ^(beta.wormbase.org)$ ) {
#         return 444;
#      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }
      

      # Forums, blog, and wiki (all legacy as these are now subdomains)
      location /forums {
        proxy_pass http://forums.wormbase.org/;
      }

      location /wiki {
        proxy_pass http://wiki.wormbase.org/;
      }

      location /blog {
        proxy_pass http://blog.wormbase.org/;
      }

      #error_page  404              /404.html;
      # redirect server error pages to the static page /50x.html
      #
      #   error_page   500 502 503 504  /50x.html;
      #   location = /50x.html {
      # root   html;
      # }

      # System Maintenance (Service Unavailable) 
      # Config broken?
#      if (-f $document_root/system_maintenance.html ) {
#        error_page 503 /system_maintenance.html;
#        return 503;
#      }

      # Show status information on /status
      location = /status {
          stub_status on;
          allow 127.0.0.1;
          deny all;
       }

       # COUCH
       # Filter requests for our CouchDBs, assuming that dbs are named /ws*.
       location ~* ^/ws.* {

           # Send all PUT requests to our core CouchDB server.
       	   #      	if ($request_method = PUT) {
	   #      	   proxy_pass http://206.108.125.165:5984/;
	   #        }

	   # Send all GETs/PUTs to the same server.
	   # We COULD send PUTs to primary server above but distribute GETs here.
           proxy_pass http://couchdb;
       }


       location / {

            ########################################
            #  Pool of fastcgi sockets
            ######################################## 
#           include fastcgi_params; # We'll discuss this later
            # Unix socket
            # fastcgi_pass unix:/tmp/myapp.fcgi;

            ########################################
            #  Pool of PSGI/Starman hosts
            ######################################## 
	    # Explore these proxy and proxy cache directives.
	    # Seems that some PUTs are getting cached instead of being sent directly
	    # to the back end couch.
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Port 443; #this is important for Catalyst Apps!
          
            # Proxy pass to our pool of servers
	    proxy_pass http://wormbase;
	    # Or to a local starman
	    # proxy_pass http://localhost:5000;
	    
#           proxy_redirect   off;
   	    client_max_body_size            0;
            client_body_buffer_size         128k;
	    proxy_send_timeout              120;
	    proxy_buffer_size               4k;
	    proxy_buffers                   4 32k;
  	    proxy_busy_buffers_size         64k;
 	    proxy_temp_file_write_size      64k;
 	    proxy_connect_timeout           75;
  	    proxy_read_timeout              205;

  	# Back end server configuration
  #            root   html;
  #            index  index.html index.htm;

           # Caching diretives
#          proxy_cache_bypass $cookie___ac;
#          proxy_cache thecache;
#          proxy_cache_key $scheme$proxy_host$request_uri;

	   # Basic authentication
           #  auth_basic            "Restricted";
           # auth_basic_user_file  htpasswd;
        }

	# Serve static files directly from nginx
        location /css {
            root  /usr/local/wormbase/website/production/root;
        }
        location /js {
            root  /usr/local/wormbase/website/production/root;
        }
        location /img {
            root  /usr/local/wormbase/website/production/root;
        }

        location /docs {
            root  /usr/local/wormbase/website/production/root;
	}

	# The tmp dir is moving.
        location /tmp {
            root  /usr/local/wormbase/tmp;
        }


#       # Force all sessions into https
#       location / {
#            rewrite         ^/(.*)$ https://localhost:443/$1 permanent;
#        }


        # Register and auth via ssl
       location /auth/login {
            rewrite         ^/(.*)$ https://beta.wormbase.org:443/$1 permanent;
        }

       location /register.* {
            rewrite         ^/(.*)$ https://beta.wormbase.org:443/$1 permanent;
        }


        # GBrowse: Could also be localhost
	location /tools/genome {
             proxy_pass http://206.108.125.173:8000/tools/genome;
         }

        location /gbrowse2 {
             proxy_pass http://206.108.125.173:8000/gbrowse2/;
        }

        location /gbrowse2/i/ {
             proxy_pass http://206.108.125.173:8000/gbrowse2/i/;
        }
   }


    # HTTPs for logging in.
    server {
        listen       443;
        server_name  beta.wormbase.org;
        ssl                  on;
        ssl_certificate      /usr/local/wormbase/website-admin/conf/nginx/server.crt;
        ssl_certificate_key  /usr/local/wormbase/website-admin/conf/nginx/server.key;
        ssl_session_timeout  5m;

        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers   on;

        location / {
              proxy_set_header Host $http_host;
              proxy_set_header X-Forwarded-Host $http_host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Port 443; #this is important for Catalyst Apps!
              #proxy_pass http://beta.wormbase.org:5000; #changed from http://localhost:5000/ which was causing double forward slash problems in the url
	      proxy_pass http://wormbase; #changed from http://localhost:5000/ which was causing double forward slash problems in the url
         }

#        location / {
#            root   html;
#            index  index.html index.htm;
#        }
    }
}



# TO HANDLE!
# do not cache when users are logged in..
#        proxy_cache_bypass $cookie___ac;
#	    set $memcached_key $uri;
#    	    memcached_pass     name:11211;
#    	    default_type       text/html;
#    	    error_page         404 @fallback;

# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#    deny  all;
#}
    

