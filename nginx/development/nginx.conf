
user  www-data;
worker_processes  5;
daemon on;
#keepalive_timeout  2;

# Error log; other directives: notice | info
error_log  /usr/local/wormbase/logs/nginx-error.log warn;

# pid file (defaults to logs)
pid        /usr/local/wormbase/services/nginx/logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    server_names_hash_bucket_size 64;

    # Optional: set up the access log and define a format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /usr/local/wormbase/logs/nginx-access.log main;

    # log for cache hits.
    log_format cache '***$time_local '
                    '$upstream_cache_status '
                    'Cache-Control: $upstream_http_cache_control '
                    'Expires: $upstream_http_expires '
                    '"$request" ($status) '
                    '"$http_user_agent" ';


 
    # Load-balancing against a pool of fastcgi TCP sockets.
    # Simple load-balancing.
    # Define as many servers as we like (and weight them)

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


#############################################
#
#  nagios:8080
#
#############################################
server {
       listen   10000;
       server_name  dev.wormbase.org;
 
       access_log  /usr/local/wormbase/logs/nagios-acccess.log;
 
       location / {
           root   /usr/local/wormbase/services/nagios/share;
           index index.php;
    #	     fastcgi_index  index.php;
    #      fastcgi_pass   127.0.0.1:9000;
           rewrite	  ^/nagios/images/(.*) /images/$1 break;
           rewrite	  ^/nagios/stylesheets/(.*) /stylesheets/$1 break;
#          auth_basic	  "Restricted";
#          auth_basic_user_file	htpasswd;
        }


        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            root   /usr/local/wormbase/services/nagios/share;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /usr/local/wormbase/services/nagios/share$fastcgi_script_name;
            include /usr/local/wormbase/services/nginx/conf/fastcgi_params;
        }
 
       location ~ \.cgi$ {
           root	/usr/local/wormbase/services/nagios/sbin;
           rewrite	^/nagios/cgi-bin/(.*)\.cgi /$1.cgi break;
     
           include /usr/local/wormbase/services/nginx/conf/fastcgi_params;
                 fastcgi_pass   127.0.0.1:49233;
                 fastcgi_param  SCRIPT_FILENAME  /usr/local/wormbase/services/nagios/sbin$fastcgi_script_name;  # same path as above
     
    #	     auth_basic		"Restricted";
    #	     auth_basic_user_file	htpasswd;
     
    #	     fastcgi_param  AUTH_USER     $remote_user;
    #      fastcgi_param  REMOTE_USER	  $remote_user;
       }
}
#############################################
#
#  upstream connections
#
#
#############################################

upstream  tomcat  {
  server   127.0.0.1:9999;
}

#############################################
#
#  dev.wormbase.org
#
#  Listening on 80, proxy pass to 8000
#
#############################################

  server {
      server_name dev.wormbase.org;
      listen      80;

       access_log /usr/local/wormbase/logs/classic-nginx-cache.log cache;
       access_log /usr/local/wormbase/logs/classic-nginx-access.log main;
       # Error log; other directives: notice | info
       error_log  /usr/local/wormbase/logs/classic-nginx-error.log warn;

       # Enable gzip compression
       gzip             on;
       gzip_min_length  1000;
       gzip_proxied     any;
       gzip_types       text/xml text/plain application/xml;

       include       mime.types;
       default_type  application/octet-stream;

      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection Close;

       # Show status information on /status
       location = /status {
           stub_status on;
           allow 127.0.0.1;
           deny all;
       }


       location / {


           if ($request_method = 'OPTIONS') {
       
              add_header 'Access-Control-Allow-Origin' '*';
              
              #
              # Om nom nom cookies
              #
       
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              
              #
              # Custom headers and headers various browsers *should* be OK with but aren't
              #
       
              add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
              
              #
              # Tell client that this pre-flight info is valid for 20 days
              #
       
              # add_header 'Access-Control-Max-Age' 1728000; # don't know if we want this...
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
       
              return 204;
           }
       
           if ($request_method = 'POST') {
       
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
       
           }
       
           if ($request_method = 'GET') {
       
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
       
           }

     

            ########################################
            #  Pool of fastcgi sockets
            ######################################## 
#           include fastcgi_params; # We'll discuss this later
            # Unix socket
            # fastcgi_pass unix:/tmp/myapp.fcgi;
   
            # TCP socket
            # fastcgi_pass  127.0.0.1:10004;

            # Or load-balanced pool (currently of one)
#           fastcgi_pass wormbase;


            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Port 443; #this is important for Catalyst Apps!
           
            # Proxy pass to a single server for testing:
            proxy_pass http://206.108.125.164:5000;

#           proxy_redirect   off;
            client_max_body_size            0;
            client_body_buffer_size         128k;
            proxy_send_timeout              120;
            proxy_buffer_size               4k;
            proxy_buffers                   4 32k;
            proxy_busy_buffers_size         64k;
            proxy_temp_file_write_size      64k;
            proxy_connect_timeout           75;
            proxy_read_timeout              205;

  	# Back end server configuration
  #            root   html;
  #            index  index.html index.htm;

           # Caching diretives
#          proxy_cache_bypass $cookie___ac;
#          proxy_cache thecache;
#          proxy_cache_key $scheme$proxy_host$request_uri;
        }

        location /static {
            #root  /usr/local/wormbase/website/development/root;
            root  /usr/local/wormbase/website/acabunoc/root;
        }

        location /tools/wormmine {
            allow all;
            proxy_pass http://tomcat/tools/wormmine;
        }

#        location /wormmine/js {
#          root /var/lib/tomcat6/webapps/wormmine/js;
#        }

#        location /wormmine/css {
#          root /var/lib/tomcat6/webapps/wormmine/css;
#        }
    }


}
