user daemon;
worker_processes  5;
daemon on;

# EC2 - elastic IPs -> Private IPs (CHANGE EVERY TIME ELASTIC IP IS REASSOCIATED)
# 50.19.229.229 (core 1) 
# 23.23.228.211 (core 2) 
# 23.21.171.141 (couch)  


# Error log; other directives: notice | info
error_log  /usr/local/wormbase/logs/nginx/error_log warn;

# pid file (defaults to logs)
pid        /usr/local/wormbase/logs/nginx.pid;

events {
    # Workers will die after this many requests.
    worker_connections  1024;
}


http {
    server_names_hash_bucket_size 64;

    # Optional: set up the access log and define a format
#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';
#                      '"$http_user_agent" "$http_x_forwarded_for"';
    log_format  main  '$remote_addr - $remote_user [$time_local] $http_referer '
                      '"$http_user_agent" "$request" $status $body_bytes_sent ';


    access_log /usr/local/wormbase/logs/nginx/access_log main;

    # log for cache hits.
    log_format cache '***$time_local '
	             '$upstream_cache_status '
                     'Cache-Control: $upstream_http_cache_control '
                     'Expires: $upstream_http_expires '
                     '"$request" ($status) '
		     '"$http_user_agent" ';


    sendfile        on;
    tcp_nopush      on;

    # TESTING OFF
    #tcp_nodelay     on;

    # TESTING AT 0: no keep-alive
    keepalive_timeout  0;
    #keepalive_timeout  65;


    # Suitable proxy defaults
    # Maximum time to connect to upstream servers
    proxy_connect_timeout           75s;
    # Maximum time to receive a response from upstream servers between read events
    proxy_read_timeout              120s;

    proxy_send_timeout              60s;
    proxy_buffer_size               4k;
    proxy_buffers                   4 32k;
    proxy_busy_buffers_size         64k;
    proxy_temp_file_write_size      64k;
    # proxy_set_header will ONLY be inherited for a 
    # given level if NO proxy_set_header entries are defined.
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Establish our cache
    # Multiple cache paths possible for different resources/paths/proxies
    # levels=1:2 specifies a hierarchy of two tiers.
    proxy_cache_path  /usr/local/wormbase/tmp/nginx-cache levels=1:2 keys_zone=thecache:100m max_size=1000m inactive=600m;
    proxy_temp_path   /usr/local/wormbase/tmp/nginx-cache-tmp;

    # Caching directives
    # proxy_cache_bypass $cookie___ac;
    proxy_cache thecache;
    proxy_cache_key $scheme$proxy_host$request_uri;

    # Request defaults
    client_max_body_size            0;
    client_body_buffer_size         128k;


#########################################################
#
# UPSTREAM TARGETS
#
#########################################################

    # A pool of hosts running starman, driving www.
    upstream wormbase  {
#       # Amazon instance - eleastic IP of 50.19.229.229
       server 10.98.131.95:5000   weight=10 max_fails=4000 fail_timeout=1m;
       
       # Amazon 2nd instance
       server 10.224.7.171:5000    weight=10 max_fails=4000 fail_timeout=1m;
#       server 10.76.254.176:5000    weight=10 max_fails=4000 fail_timeout=1m;


	# Temp 3rd instance
#	server 10.114.73.81:5000 weight=10 max_fails=4000 fail_timeout=1m;

	# may want to play with this to deal with TIME_WAIT requests
#	netstat -an|awk '/tcp/ {print $6}'|sort|uniq -c
#	keepalive SERVERS

    }  

    # Data mining specific queries
    upstream wormbase-mining {
       # wb-mining @ oicr
       server 206.108.125.178:5000 weight=10 max_fails=200  fail_timeout=1m;
    }


    upstream intermine-production  {
         server 206.108.125.166:8080 weight=10 max_fails=200  fail_timeout=1m;
    }


    upstream jenkins-server {
    	     server 23.23.228.211:8080 fail_timeout=0;
    }


    ##############################################################
    # 
    # Developer spaces, useful for testing app beahvior through
    # the proxy.
    #
    ##############################################################
    upstream wormbase-development-todd {
    	     server dev.wormbase.org:9001 fail_timeout=1m;
#    	     server 23.23.228.211:9001 fail_timeout=1m;
    }

    upstream wormbase-development-abby {
    	     server dev.wormbase.org:9002 fail_timeout=1m;
    }

    upstream wormbase-development-joachim {
    	     server dev.wormbase.org:9003 fail_timeout=1m;
    }

    # A single shared gbrowse development space
    # Note that this requires some files to be at website/production    
    upstream wormbase-development-gbrowse {
          server dev.wormbase.org:8000  weight=10 max_fails=2000 fail_timeout=1m;
    }

    upstream wormbase-development-synteny {
        server dev.wormbase.org:8001    weight=10 max_fails=2000 fail_timeout=1m; 
    }









    # Couchdb hosted in the cloud.
    # Any of our nodes could serve as failover - just need
    # to adjust location of couchdb in app configuration (wormbase_production.conf)
    upstream couchdb {
        # EC2 couch
#        server 10.224.113.14:5984 weight=10 max_fails=2000 fail_timeout=1m;
        server 10.101.22.233:5984 weight=10 max_fails=2000 fail_timeout=1m;
        # Using public elastic IP (which we should NOT be
        # doing as it incurs data transfer charges)
        # server 23.21.171.141:5984 weight=10 max_fails=2000 fail_timeout=1m;

        # OICR couch
#       server 206.108.125.165:5984 weight=10 max_fails=2000 fail_timeout=1m;
	# OICR reserves
#       server 206.108.125.164:5984 backup
#       server 206.108.125.163:5984 backup
#       server 206.108.125.162:5984 backup
#       server 206.108.125.166:5984 backup
    }              

    upstream couchdb-staging {
        server 206.108.125.164:5984 weight=10 max_fails=2000 fail_timeout=1m;
    }


    upstream couchdb-qaqc {
        server 206.108.125.175:5984 weight=10 max_fails=2000 fail_timeout=1m;
    }

    # Social services like the wiki, blog, and forums.
    upstream wormbase-social {
       server 23.21.171.141      weight=10 max_fails=2000 fail_timeout=1m; 
    }

    upstream wormbase-gbrowse {
       # EC2
#        server 50.19.229.229        weight=10 max_fails=2000 fail_timeout=1m;

        # OICR dedicated
        server 206.108.125.173      weight=10 max_fails=2000 fail_timeout=1m; 
    }

    upstream wormbase-synteny {
       # EC2
#        server 50.19.229.229        weight=10 max_fails=2000 fail_timeout=1m;

        # OICR dedicated
        server 206.108.125.173:8080      weight=10 max_fails=2000 fail_timeout=1m; 
    }

    # The staging machine (new website)
    upstream wormbase-staging {
       # aka wb-web7 @ oicr
       server 206.108.125.164:5000 weight=10 max_fails=2000 fail_timeout=1m;

       # web1
#       server 206.108.125.175:5000 weight=10 max_fails=2000 fail_timeout=2m;

       # web2
#       server 206.108.125.177:5000 weight=10 max_fails=2000 fail_timeout=2m;

       # web3
#      server 206.108.125.190:5000 weight=10 max_fails=2000 fail_timeout=2m;

       # web4
#       server 206.108.125.168:5000 weight=10 max_fails=2000 fail_timeout=2m;
    }

    # The QA/QC website
    upstream wormbase-qaqc {
       # web1
       server 206.108.125.175:5000 weight=10 max_fails=2000 fail_timeout=2m;
    }

    upstream wormbase-gbrowse-qaqc {
        # OICR dedicated
        server 206.108.125.164:8080      weight=10 max_fails=2000 fail_timeout=1m; 
    }

    upstream wormbase-mining-staging {
        # OICR dedicated
        server 206.108.125.164:5000      weight=10 max_fails=2000 fail_timeout=1m; 
    }

    upstream wormbase-mining-temp {
        # OICR dedicated
#        server 206.108.125.164:5000      weight=10 max_fails=2000 fail_timeout=1m; 
       server 206.108.125.178:5000 weight=10 max_fails=200  fail_timeout=1m;
    }


    # THIS IS BEING DEPRECATED!  THERE IS A SINGLE DEVELOPMENT GBROWSE INSTANCE
    # Actually, this should refer to the staging instance that will become production...
    # Not sure how to handle this right now.
    upstream wormbase-gbrowse-staging {
        # OICR dedicated
        server 206.108.125.164:8081      weight=10 max_fails=2000 fail_timeout=1m; 
    }



    upstream wormbase-legacy {
       # Dedicated legacy server at OICR (wb-web6)
       server 206.108.125.165:8080        weight=10 max_fails=2000 fail_timeout=1m;
    }

     map $http_user_agent $is_bot {
         default 0;
#         ~(crawl|Googlebot|Google|Slurp|spider|bingbot|tracker|click|parser|spider|genie0217)$ 1;
         ~(crawl|Slurp|spider|bingbot|tracker|click|parser|spider|genie0217)$ 1;
     }


#########################################################
#
# SERVER DEFINITIONS
#
#########################################################


    ########################################
    #
    #   Cache purging (on a dedicated port)
    #
    ########################################
    server {
        listen 8080;
        access_log /usr/local/wormbase/logs/cache-purge/access_log;

        location / {
      	    allow  65.219.130.69;
      	    deny   all;
            proxy_cache_purge thecache $scheme$proxy_host$request_uri;
        }
    }

  ##################################
  #
  #  The production website
  # 
  ##################################
  server {
      server_name wormbase.org www.wormbase.org wormbase.net www.wormbase.net;
      listen      80;
		       
      access_log /usr/local/wormbase/logs/www/cache_log cache  buffer=16k;
      access_log /usr/local/wormbase/logs/www/access_log main  buffer=16k;
      error_log  /usr/local/wormbase/logs/www/error_log warn;

      # Enable gzip compression
      # Turn off if we're sitting behind a caching server.
#      gzip             on;
#      gzip_min_length  1000;
#      gzip_proxied     any;
#      gzip_types       text/xml text/plain application/xml;

      include       mime.types;
      default_type  application/octet-stream;

      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection Close;


      #############################################
      #
      # LOCKDOWN
      #
      #############################################      

      # Force all users to use www.wormbase.org
      if ($host ~ ^(wormbase.org)) {
      	  #rewrite ^(.*) http://example.com$1 permanent;
          rewrite ^(.*) http://www.wormbase.org$1 permanent;          
      }

      if ($is_bot) {
           return 404; # Please respect the robots.txt file !
      }

      # Only requests to our Host are allowed
      if ($host !~ ^(wormbase.org|www.wormbase.org|wormbase.net|www.wormbase.net)$ ) { 
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }
      
      #error_page  404              /404.html;
      # redirect server error pages to the static page /50x.html
      #
      #   error_page   500 502 503 504  /50x.html;
      #   location = /50x.html {
      # root   html;
      # }

      location /errors/system_maintenance.html {
          root /usr/local/wormbase/website;
      }

      # System Maintenance (Service Unavailable)       
      #if (-f /usr/local/wormbase/system_maintenance.html ) {
      error_page 502 /errors/system_maintenance.html;
       #     return 502;
       #}


      # Forums, blog, and wiki (all legacy as these are now subdomains)
      location /forums { 
           rewrite forums(.*) http://forums.wormbase.org$1 permanent;
      }

      # Forums, blog, and wiki (all legacy as these are now subdomains)
      location /wiki { 
           rewrite wiki(.*) http://wiki.wormbase.org$1 permanent;
      }


      location /perl/ace { 
#           rewrite perl/ace/elegans/seq/sequence?gb=(.*) "http://www.wormbase.org/db/get?name=$2;class=sequence" permanent;
#           rewrite ^/perl/ace/elegans/seq/sequence\?gb=(.*)$ "http://www.wormbase.org/db/get?name=$1;class=sequence" permanent;
#	   rewrite perl/ace/elegans/seq/sequence\?gb=(.*) "http://www.wormbase.org/db/get?name=$1;class=sequence" permanent;
	   rewrite ^ "http://www.wormbase.org/db/get?name=$arg_gb;class=sequence?" permanent;
#           rewrite perl/ace(.*) http://forums.wormbase.org$1 permanent;
	    
      }    

       location / {
             if ($request_method = 'OPTIONS') { 	     
	             add_header 'Access-Control-Allow-Origin' '*';
        
	        #
        	# Om nom nom cookies
        	#
 
	        add_header 'Access-Control-Allow-Credentials' 'true';
        	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        
		#
        	# Custom headers and headers various browsers *should* be OK with but aren't
       		#
	 
		add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        
	        #
        	# Tell client that this pre-flight info is valid for 20 days
        	#
 
	        add_header 'Access-Control-Max-Age' 1728000;
        	add_header 'Content-Type' 'text/plain charset=UTF-8';
        	add_header 'Content-Length' 0;
 
	        return 204;
     	    }
 
	    if ($request_method = 'POST') {
 	       add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Credentials' 'true';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     	    }
 
	    if ($request_method = 'GET') {
               add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Credentials' 'true';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	    }


	    proxy_pass http://wormbase;

           # Caching diretives
#          proxy_cache_bypass $cookie___ac;
#          proxy_cache thecache;
#          proxy_cache_key $scheme$proxy_host$request_uri;

        }

        # Raw status information at /status
        location /stats/nginx/raw {
            stub_status on;
            allow  65.219.130.69;                
	    allow  10.245.30.22;
            deny   all;
        }

        location /stats/nginx {
#           allow  65.219.130.69;
#           deny   all;
            allow all;
	    root  /usr/local/wormbase/website-admin/nginx/production;
        }

        location /stats/starman/todd {
            allow all;
	    proxy_pass http://206.108.125.180:9001/server-status;
        }

        location /stats/starman/abby {
            allow all;
	    proxy_pass http://206.108.125.180:9002/server-status;
        }

        location /stats/starman/staging {
            allow all;
	    proxy_pass http://206.108.125.164:5000/server-status;
        }

        location /stats/starman/core1 {
            allow all;
	    proxy_pass http://10.98.131.95:5000/server-status;
        }

        location /stats/starman/core2 {
            allow all;
	    proxy_pass http://10.224.7.171:5000/server-status;
        }

	# Serve static files directly from nginx
        location /css {
            root  /usr/local/wormbase/website/production/root;
        }
        location /js {
            root  /usr/local/wormbase/website/production/root;
        }

        location /img {
            root  /usr/local/wormbase/website/production/root;
        }

	location /robots.txt {
	    root /usr/local/wormbase/website/production/root/html;
        }

	location /google7f93ee27d9252013.html {
	    root /usr/local/wormbase/website/production/root/html;
        }

        location /img-static {
            root  /usr/local/wormbase/website-shared-files/html;
        }

	# One of hack for NCBI Linkout: 10/2012
        location /images/wdb.gif {
            root  /usr/local/wormbase/website-shared-files/html/img-static/wdb.gif;
        }

        location /docs {
            root  /usr/local/wormbase/website/production/root;
	}

	# The tmp dir is moving.
        location /tmp {
            root  /usr/local/wormbase/tmp;
        }

#       # Force all sessions into https
#       location / {
#            rewrite         ^/(.*)$ https://localhost:443/$1 permanent;
#        }

	 # Trap old requests for the genome browser.
        location /db/gb2/gbrowse/ {
	     rewrite ^/db/gb2/gbrowse/(.*)$ http://www.wormbase.org/tools/genome/gbrowse/$1 permanent;
        }


        location /tools/wormmine {
	#        location /wormmine {
            allow all;
            proxy_pass http://intermine-production/tools/wormmine;
        }

	# GBrowse, served by apache on a dedicated node.
	location /tools/genome {
#             proxy_pass http://206.108.125.173/tools/genome;
	     proxy_pass http://wormbase-gbrowse/tools/genome;
        }

	# GBrowse, served by a dedicated host.
        location /gbrowse2 {
#             proxy_pass http://206.108.125.173/gbrowse2/;
	     proxy_pass http://wormbase-gbrowse/gbrowse2/;
        }

        location /gbrowse2/i/ {
#             proxy_pass http://206.108.125.173/gbrowse2/i/;
	     proxy_pass http://wormbase-gbrowse/gbrowse2/i/;
        }

        location /gbrowse-static/ {
	     proxy_pass http://wormbase-gbrowse/gbrowse-static/;
        }


	# GBrowse, served by apache on a dedicated node.
	location /tools/synteny {
#             proxy_pass http://206.108.125.173/tools/genome
	     proxy_pass http://wormbase-synteny/tools/synteny;
        }

	# GBrowse, served by a dedicated host.
        location /synteny/images/ {
#             proxy_pass http://206.108.125.173/gbrowse2/;
	     proxy_pass http://wormbase-gbrowse/synteny/images/;
        }

	# Send specific queries to wormbase mining
	location /tools/blast_blat {
#                return 502; # Please respect the robots.txt file !
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/tools/blast_blat;
        }

	location /tools/epic {
#                return 502; # Please respect the robots.txt file !
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
#	     proxy_pass http://wormbase-mining/tools/epic;
	     proxy_pass http://wormbase-mining-temp/tools/epic;
        }

	location /tools/tree {
#                return 502; # Please respect the robots.txt file !
             if ($is_bot) {
                return 404; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/tools/tree;
        }

	location /tools/gmap {
#                return 502; # Please respect the robots.txt file !
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining-temp/tools/gmap;
#	     proxy_pass http://wormbase-mining/tools/gmap;
        }

	location /tools/epcr {
#                return 502; # Please respect the robots.txt file !
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/tools/epcr;
         }

	# And send temporary images generated by those tools to the correct server.
	location /media/images/blast_blat {
#                return 502; # Please respect the robots.txt file !
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/media/images/blast_blat;
	}

	location /media/images/epic {
#                return 502; # Please respect the robots.txt file !
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
#	     proxy_pass http://wormbase-mining/media/images/epic;
	     proxy_pass http://wormbase-mining-temp/media/images/epic;
	}


 	location /tools/queries {
#                return 502; # Please respect the robots.txt file !
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/tools/queries;
        }
   }

    # HTTPs for logging in and registering.
    server {
        listen       443;
        server_name wormbase.org www.wormbase.org;
		      
        access_log /usr/local/wormbase/logs/ssl/cache_log cache  buffer=0k;
        access_log /usr/local/wormbase/logs/ssl/access_log main  buffer=0k;
        error_log  /usr/local/wormbase/logs/ssl/error_log warn;

        ssl                  on;
        ssl_certificate      /usr/local/wormbase/website-admin/nginx/ssl-certs/wormbase.org.chained.crt;
        ssl_certificate_key  /usr/local/wormbase/website-admin/nginx/ssl-certs/wormbase.org.key;
        ssl_session_timeout  5m;
        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers   on;

	location /robots.txt {
	    root /usr/local/wormbase/website/production/root/html;
        }

        location / {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }


              proxy_set_header Host $http_host;
              proxy_set_header X-Forwarded-Host $http_host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#	      proxy_set_header Origin http://beta.wormbase.org;
              proxy_set_header X-Forwarded-Port 443; #this is important for Catalyst Apps!
	      proxy_pass http://wormbase;
	      proxy_redirect https://www.wormbase.org:443/ http://www.wormbase.org/;
         }


	 # Trap old requests for the genome browser.
        location /db/gb2/gbrowse/ {
	     rewrite ^/db/gb2/gbrowse/(.*)$ http://www.wormbase.org/tools/genome/gbrowse/$1 permanent;
        }


        location /tools/wormmine {
	#        location /wormmine {
            allow all;
            proxy_pass http://intermine-production/tools/wormmine;
        }

	# GBrowse, served by apache on a dedicated node.
	location /tools/genome {
#             proxy_pass http://206.108.125.173/tools/genome;
	     proxy_pass http://wormbase-gbrowse/tools/genome;
        }

	# GBrowse, served by a dedicated host.
        location /gbrowse2 {
#             proxy_pass http://206.108.125.173/gbrowse2/;
	     proxy_pass http://wormbase-gbrowse/gbrowse2/;
        }

        location /gbrowse2/i/ {
#             proxy_pass http://206.108.125.173/gbrowse2/i/;
	     proxy_pass http://wormbase-gbrowse/gbrowse2/i/;
        }


        location /gbrowse-static/ {
	     proxy_pass http://wormbase-gbrowse/gbrowse-static/;
        }

	# Send specific queries to wormbase mining
	location /tools/blast_blat {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/tools/blast_blat;
        }

	location /tools/epic {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
#	     proxy_pass http://wormbase-mining/tools/epic;
	     proxy_pass http://wormbase-mining-temp/media/images/epic;
        }


	location /tools/tree {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
#	     proxy_pass http://wormbase-mining/tools/epic;
	     return 404;
	     proxy_pass http://wormbase-mining-temp/media/images/tree;
        }

	location /tools/gmap {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
#	     proxy_pass http://wormbase-mining/tools/gmap;
	     proxy_pass http://wormbase-mining-temp/media/images/gmap;
        }

	location /tools/epcr {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/tools/epcr;
         }

	# And send temporary images generated by those tools to the correct server.
	location /media/images/blast_blat {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/media/images/blast_blat;
	}


 	location /tools/queries {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining/tools/queries;
        }
    }



#############################################
#  staging.wormbase.org
#      wb-web7: 206.108.125.164:5000
#############################################
  server {
      server_name staging.wormbase.org;      
      listen      80;
		       
      access_log /usr/local/wormbase/logs/staging/cache_log cache;
      access_log /usr/local/wormbase/logs/staging/access_log main;
      error_log  /usr/local/wormbase/logs/staging/error_log warn;

      include       mime.types;
      default_type  application/octet-stream;

      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection Close;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################      

      # Only requests to our Host are allowed
      if ($host !~ ^(staging.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

      if ($http_user_agent ~ "Googlebot" ) { 
         return 403; 
      } 
      
      location /errors/system_maintenance.html {
          root /usr/local/wormbase/website;
      }

      # System Maintenance (Service Unavailable)       
      error_page 502 /errors/system_maintenance.html;

      location / {

             if ($request_method = 'OPTIONS') { 	     
	             add_header 'Access-Control-Allow-Origin' '*';
        
	        #
        	# Om nom nom cookies
        	#
 
	        add_header 'Access-Control-Allow-Credentials' 'true';
        	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        
		#
        	# Custom headers and headers various browsers *should* be OK with but aren't
        	#
 
		add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        
	        #
        	# Tell client that this pre-flight info is valid for 20 days
        	#
 
	        add_header 'Access-Control-Max-Age' 1728000;
        	add_header 'Content-Type' 'text/plain charset=UTF-8';
        	add_header 'Content-Length' 0;
 
	        return 204;
     	    }
 
	    if ($request_method = 'POST') {
 	       add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Credentials' 'true';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     	    }
 
	    if ($request_method = 'GET') {
               add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Credentials' 'true';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	    }


          # Pool of PSGI/Starman hosts
	  proxy_pass http://wormbase-staging;

          # Caching diretives
#         proxy_cache_bypass $cookie___ac;
#         proxy_cache thecache;
#         proxy_cache_key $scheme$proxy_host$request_uri;
       }


        location /tools/wormmine {
	#        location /wormmine {
            allow all;
            proxy_pass http://intermine-production/tools/wormmine;
        }



	# GBrowse, served by apache on a dedicated node.
	location /tools/genome {
#             proxy_pass http://206.108.125.173/tools/genome;
	     proxy_pass http://wormbase-gbrowse-staging/tools/genome;
        }

	location /robots.txt {
	    root /usr/local/wormbase/website/production/root/html;
        }

	# GBrowse, served by a dedicated host.
        location /gbrowse2 {
#             proxy_pass http://206.108.125.173/gbrowse2/;
	     proxy_pass http://wormbase-gbrowse-staging/gbrowse2/;
        }

        location /gbrowse2/i/ {
#             proxy_pass http://206.108.125.173/gbrowse2/i/;
	     proxy_pass http://wormbase-gbrowse-staging/gbrowse2/i/;
        }

        location /gbrowse-static/ {
	     proxy_pass http://wormbase-gbrowse-staging/gbrowse-static/;
        }

	# Send specific queries to wormbase mining
	location /tools/blast_blat {
	     proxy_pass http://wormbase-mining-staging/tools/blast_blat;
         }

	location /tools/epic {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining-staging/tools/epic;
        }

	# And send temporary images generated by those tools to the correct server.
	location /media/images/blast_blat {
	     proxy_pass http://wormbase-mining-staging/media/images/blast_blat;
	}

      	location /media/images/epic {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining-staging/media/images/epic;
	}


#        location /img-static {
#            proxy_pass http://wormbase-staging;
#        }

	location /_utils {
	     proxy_pass http://couchdb-staging/_utils;
        }


       # We will NOT serve files directly for staging.
       # We want to be able to see what is available on the back end.
       # See configuration for www/beta if necessary.

#      # Force all sessions into https
#       location / {
#            rewrite         ^/(.*)$ https://localhost:443/$1 permanent;
#        }
   }



#############################################
#  staging.wormbase.org
#      wb-web7: 206.108.125.175:5000
#############################################
  server {
      server_name qaqc.wormbase.org;      
      listen      80;
		       
      access_log /usr/local/wormbase/logs/qaqc/cache_log cache;
      access_log /usr/local/wormbase/logs/qaqc/access_log main;
      error_log  /usr/local/wormbase/logs/qaqc/error_log warn;

      include       mime.types;
      default_type  application/octet-stream;

      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection Close;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################      

      # Only requests to our Host are allowed
      if ($host !~ ^(qaqc.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

      if ($http_user_agent ~ "Googlebot" ) { 
         return 403; 
      } 
      
      location /errors/system_maintenance.html {
          root /usr/local/wormbase/website;
      }

      # System Maintenance (Service Unavailable)       
      error_page 502 /errors/system_maintenance.html;

      location / {
          # Pool of PSGI/Starman hosts
	  proxy_pass http://wormbase-qaqc;

          # Caching diretives
#         proxy_cache_bypass $cookie___ac;
#         proxy_cache thecache;
#         proxy_cache_key $scheme$proxy_host$request_uri;
       }


	# GBrowse, served by apache on a dedicated node.
	location /tools/genome {
#             proxy_pass http://206.108.125.173/tools/genome;
	     proxy_pass http://wormbase-gbrowse-qaqc/tools/genome;
        }

	location /robots.txt {
	    root /usr/local/wormbase/website/production/root/html;
        }

	# GBrowse, served by a dedicated host.
        location /gbrowse2 {
#             proxy_pass http://206.108.125.173/gbrowse2/;
	     proxy_pass http://wormbase-gbrowse-qaqc/gbrowse2/;
        }

        location /gbrowse2/i/ {
#             proxy_pass http://206.108.125.173/gbrowse2/i/;
	     proxy_pass http://wormbase-gbrowse-qaqc/gbrowse2/i/;
        }

        location /gbrowse-static/ {
	     proxy_pass http://wormbase-gbrowse-qaqc/gbrowse-static/;
        }

	# Send specific queries to wormbase mining
	location /tools/blast_blat {
	     proxy_pass http://wormbase-mining-staging/tools/blast_blat;
         }

	location /tools/epic {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining-staging/tools/epic;
        }

	# And send temporary images generated by those tools to the correct server.
	location /media/images/blast_blat {
	     proxy_pass http://wormbase-mining-staging/media/images/blast_blat;
	}

      	location /media/images/epic {
             if ($is_bot) {
                return 403; # Please respect the robots.txt file !
             }
	     proxy_pass http://wormbase-mining-staging/media/images/epic;
	}


        location /img-static {
            root  /usr/local/wormbase/website-shared-files/html;
        }

	location /couchdb/ {
	     proxy_pass http://couchdb-qaqc/;
        }


       # We will NOT serve files directly for staging.
       # We want to be able to see what is available on the back end.
       # See configuration for www/beta if necessary.

#      # Force all sessions into https
#       location / {
#            rewrite         ^/(.*)$ https://localhost:443/$1 permanent;
#        }
   }


  ##################################
  #
  #  couchdb.wormbase.org
  #     206.108.125.176
  # 
  ##################################
  server {
       listen 80;
       server_name couchdb.wormbase.org;
       access_log /usr/local/wormbase/logs/couchdb/access_log main;
       error_log  /usr/local/wormbase/logs/couchdb/error_log warn;
       location / {
	    proxy_pass http://couchdb/;	
        }
  }


  ##################################
  #
  #  blog.wormbase.org
  #     OICR: 206.108.125.176 (using wormbase-social)
  #     EC2: 23.21.171.141
  ##################################
  server {
       listen 80;
       server_name blog.wormbase.org;
#       index       index.php index.html
#       root        /usr/local/wormbase/website/blog.wormbase.org/current
       access_log /usr/local/wormbase/logs/blog/access_log main;
       error_log  /usr/local/wormbase/logs/blog/error_log warn;

       location / {
	    proxy_pass http://wormbase-social;
        }
  }

  ##################################
  #
  #  forums.wormbase.org
  #     OICR: 206.108.125.176 (using wormbase-social)
  #     EC2: 23.21.171.141
  ##################################
  server {
       listen 80;
       server_name forums.wormbase.org;
#       index       index.php index.html
#       root        /usr/local/wormbase/website/forum.wormbase.org/current
       access_log /usr/local/wormbase/logs/forum/access_log main;
       error_log  /usr/local/wormbase/logs/forum/error_log warn;
       location / {
	    proxy_pass http://wormbase-social;
       }
  }

  ##################################
  #
  #  wiki.wormbase.org
  #     OICR: 206.108.125.176 (using wormbase-social)
  #     EC2: 23.21.171.141
  ##################################
  server {
       listen 80;
       server_name wiki.wormbase.org;
#       index       index.php index.html
#       root        /usr/local/wormbase/website/wiki.wormbase.org/current
       access_log /usr/local/wormbase/logs/wiki/access_log main;
       error_log  /usr/local/wormbase/logs/wiki/error_log warn;
       location / {
	    proxy_pass http://wormbase-social;
        }
  }

  ##################################
  #
  #  api.wormbase.org
  #      Send API requests to a dedicated host
  # 
  ##################################
  server {
       listen 80;
       server_name api.wormbase.org;
#       index       index.php index.html
#       root        /usr/local/wormbase/website/blog.wormbase.org/current
       access_log /usr/local/wormbase/logs/api/access_log main;
       error_log  /usr/local/wormbase/logs/api/error_log warn;


      #############################################
      #
      # LOCKDOWN
      #
      #############################################      

      # Only requests to our Host are allowed
      if ($host !~ ^(api.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

      location /robots.txt {
	    root /usr/local/wormbase/website/production/root/html;
      }

      location / {
          if ($is_bot) {
                return 403; # Please respect the robots.txt file !
          }
	  proxy_pass http://wormbase-mining;
      }
  }


#############################################
#  LEGACY
#     The old website, preserved for posterity.
#     wb-web6@oicr: 206.108.125.165:8080
#############################################
server {
      server_name legacy.wormbase.org;
      listen 80;
		       
      access_log /usr/local/wormbase/logs/legacy/cache_log cache;
      access_log /usr/local/wormbase/logs/legacy/access_log main;
      # Error log; other directives: notice | info
      error_log  /usr/local/wormbase/logs/legacy/error_log warn;

      # Enable gzip compression
      gzip             on;
      gzip_min_length  1000;
      gzip_proxied     any;
      gzip_types       text/xml text/plain application/xml;

      include       mime.types;
      default_type  application/octet-stream;

      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection Close;

      # LOCKDOWN: only requests to our host are allowed
      if ($host !~ ^(legacy.wormbase.org)$ ) {
             return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
              return 444;
      } 

      location /biomart/martview {
 	      rewrite ^ http://caprica.caltech.edu:9002/biomart/martview permanent;
      }

      error_page 503 /system_maintenance.html;

      location / {
          if (-f /usr/local/wormbase/website/classic/html/system_maintenance.html) {
               return 503;
          }	     
	  proxy_pass http://wormbase-legacy;
       }

       location = /system_maintenance.html {
          root /usr/local/wormbase/website/classic/html/;
          internal;
       }
    }


    ##############################################################
    # 
    # DEVELOPER
    # (mostly) dev.wormbase.org
    # Todd: 9001
    # Abby: 9002
    # Joachim: 9003
    ##############################################################
    server {
          server_name todd.wormbase.org;
    	  listen 80;
		     
          access_log /usr/local/wormbase/logs/todd/cache_log cache;
          access_log /usr/local/wormbase/logs/todd/access_log main;
          # Error log; other directives: notice | info
          error_log  /usr/local/wormbase/logs/todd/error_log warn;

          # Enable gzip compression
          gzip             on;
          gzip_min_length  1000;
          gzip_proxied     any;
          gzip_types       text/xml text/plain application/xml;

          include       mime.types;
          default_type  application/octet-stream;

          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Connection Close;

          #############################################
          #
          # LOCKDOWN
          #
          #############################################
          # Only requests to our Host are allowed
          if ($host !~ ^(todd.wormbase.org)$ ) {
             return 444;
          }

          # Only allow these request methods
          if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
             return 444;
          }

          # No reason for bots to be crawling development sites.
          if ($is_bot) {
               return 403;
          }

          # Let's just be doubly sure...
          if ($http_user_agent ~ "Googlebot" ) { 
              return 403; 
          } 

          ##################################################
          # Common URLs
          ##################################################

          # Show status information on /status
          location = /status {
              stub_status on;
              allow 127.0.0.1;
              deny all;
          }

          location /errors/system_maintenance.html {
              root /usr/local/wormbase/website;
          }

          # System Maintenance (Service Unavailable)       
          error_page 502 /errors/system_maintenance.html;

          ##################################################
          # Document root: enable XSS for intermine integration
          ##################################################
          location / {
               if ($request_method = 'OPTIONS') { 	     
	            add_header 'Access-Control-Allow-Origin' '*';

             	    # Om nom nom cookies
	            add_header 'Access-Control-Allow-Credentials' 'true';
        	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        	    # Custom headers and headers various browsers *should* be OK with but aren't
		    add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        	    # Tell client that this pre-flight info is valid for 20 days
	            add_header 'Access-Control-Max-Age' 1728000;
        	    add_header 'Content-Type' 'text/plain charset=UTF-8';
        	    add_header 'Content-Length' 0;
 
	            return 204;
     	        }
 
	        if ($request_method = 'POST') {
 	            add_header 'Access-Control-Allow-Origin' '*';
                    add_header 'Access-Control-Allow-Credentials' 'true';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                    add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     	        }
 
	       if ($request_method = 'GET') {
                   add_header 'Access-Control-Allow-Origin' '*';
                   add_header 'Access-Control-Allow-Credentials' 'true';
                   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                   add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	       }

 	       proxy_pass http://wormbase-development-todd;
          }

          ##################################################
          # Services shared across development instances
          ##################################################

          # Files in the shared static directory
          location /img-static {
                 root  /usr/local/wormbase/website-shared-files/html;
          }

          # One off hack for NCBI Linkout: 10/2012. Annoying!
          location /images/wdb.gif {
                root  /usr/local/wormbase/website-shared-files/html/img-static/wdb.gif;
          }

          # GBrowse - highly dependent on back end Apache configuration!
          location /tools/genome {
       	        proxy_pass http://wormbase-development-gbrowse/tools/genome;
          }

          location /gbrowse2 {
	         proxy_pass http://wormbase-development-gbrowse/gbrowse2/;
          }
	
          location /gbrowse2/i/ {
	         proxy_pass http://wormbase-development-gbrowse/tools/gbrowse2/i/;
          }

          # The synteny browsing component of GBrowse.
          location /tools/synteny {
	         proxy_pass http://wormbase-development-synteny/tools/synteny;
          }

          # GBrowse, served by a dedicated host.
          location /synteny/images/ {
	         proxy_pass http://wormbase-development-synteny/synteny/images/;
          }

          location /tools/wormmine {
                allow all;
                 proxy_pass http://intermine-production/tools/wormmine;
          }
    }

    server {
          server_name abby.wormbase.org;
    	  listen 80;
		     
          access_log /usr/local/wormbase/logs/abby/cache_log cache;
          access_log /usr/local/wormbase/logs/abby/access_log main;
          # Error log; other directives: notice | info
          error_log  /usr/local/wormbase/logs/abby/error_log warn;

          # Enable gzip compression
          gzip             on;
          gzip_min_length  1000;
          gzip_proxied     any;
          gzip_types       text/xml text/plain application/xml;

          include       mime.types;
          default_type  application/octet-stream;

          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Connection Close;

          #############################################
          #
          # LOCKDOWN
          #
          #############################################
          # Only requests to our Host are allowed
          if ($host !~ ^(abby.wormbase.org)$ ) {
             return 444;
          }

          # Only allow these request methods
          if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
             return 444;
          }

          # No reason for bots to be crawling development sites.
          if ($is_bot) {
               return 403;
          }

          # Let's just be doubly sure...
          if ($http_user_agent ~ "Googlebot" ) { 
              return 403; 
          } 

          ##################################################
          # Common URLs
          ##################################################

          # Show status information on /status
          location = /status {
              stub_status on;
              allow 127.0.0.1;
              deny all;
          }

          location /errors/system_maintenance.html {
              root /usr/local/wormbase/website;
          }

          # System Maintenance (Service Unavailable)       
          error_page 502 /errors/system_maintenance.html;

          ##################################################
          # Document root: enable XSS for intermine integration
          ##################################################
          location / {
               if ($request_method = 'OPTIONS') { 	     
	            add_header 'Access-Control-Allow-Origin' '*';

             	    # Om nom nom cookies
	            add_header 'Access-Control-Allow-Credentials' 'true';
        	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        	    # Custom headers and headers various browsers *should* be OK with but aren't
		    add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        	    # Tell client that this pre-flight info is valid for 20 days
	            add_header 'Access-Control-Max-Age' 1728000;
        	    add_header 'Content-Type' 'text/plain charset=UTF-8';
        	    add_header 'Content-Length' 0;
 
	            return 204;
     	        }
 
	        if ($request_method = 'POST') {
 	            add_header 'Access-Control-Allow-Origin' '*';
                    add_header 'Access-Control-Allow-Credentials' 'true';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                    add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     	        }
 
	       if ($request_method = 'GET') {
                   add_header 'Access-Control-Allow-Origin' '*';
                   add_header 'Access-Control-Allow-Credentials' 'true';
                   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                   add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	       }

 	       proxy_pass http://wormbase-development-abby;
          }

          ##################################################
          # Services shared across development instances
          ##################################################

          # Files in the shared static directory
          location /img-static {
                 root  /usr/local/wormbase/website-shared-files/html;
          }

          # One off hack for NCBI Linkout: 10/2012. Annoying!
          location /images/wdb.gif {
                root  /usr/local/wormbase/website-shared-files/html/img-static/wdb.gif;
          }

          # GBrowse - highly dependent on back end Apache configuration!
          location /tools/genome {
       	        proxy_pass http://wormbase-development-gbrowse/tools/genome;
          }

          location /gbrowse2 {
	         proxy_pass http://wormbase-development-gbrowse/gbrowse2/;
          }
	
          location /gbrowse2/i/ {
	         proxy_pass http://wormbase-development-gbrowse/tools/gbrowse2/i/;
          }

          # The synteny browsing component of GBrowse.
          location /tools/synteny {
	         proxy_pass http://wormbase-development-synteny/tools/synteny;
          }

          # GBrowse, served by a dedicated host.
          location /synteny/images/ {
	         proxy_pass http://wormbase-development-synteny/synteny/images/;
          }

          location /tools/wormmine {
                allow all;
                 proxy_pass http://intermine-production/tools/wormmine;
          }
    }

    server {
          server_name joachim.wormbase.org;
    	  listen 80;
		     
          access_log /usr/local/wormbase/logs/joachim/cache_log cache;
          access_log /usr/local/wormbase/logs/joachim/access_log main;
          # Error log; other directives: notice | info
          error_log  /usr/local/wormbase/logs/joachim/error_log warn;

          # Enable gzip compression
          gzip             on;
          gzip_min_length  1000;
          gzip_proxied     any;
          gzip_types       text/xml text/plain application/xml;

          include       mime.types;
          default_type  application/octet-stream;

          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Connection Close;

          #############################################
          #
          # LOCKDOWN
          #
          #############################################
          # Only requests to our Host are allowed
          if ($host !~ ^(joachim.wormbase.org)$ ) {
             return 444;
          }

          # Only allow these request methods
          if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
             return 444;
          }

          # No reason for bots to be crawling development sites.
          if ($is_bot) {
               return 403;
          }

          # Let's just be doubly sure...
          if ($http_user_agent ~ "Googlebot" ) { 
              return 403; 
          } 

          ##################################################
          # Common URLs
          ##################################################

          # Show status information on /status
          location = /status {
              stub_status on;
              allow 127.0.0.1;
              deny all;
          }

          location /errors/system_maintenance.html {
              root /usr/local/wormbase/website;
          }

          # System Maintenance (Service Unavailable)       
          error_page 502 /errors/system_maintenance.html;

          ##################################################
          # Document root: enable XSS for intermine integration
          ##################################################
          location / {
               if ($request_method = 'OPTIONS') { 	     
	            add_header 'Access-Control-Allow-Origin' '*';

             	    # Om nom nom cookies
	            add_header 'Access-Control-Allow-Credentials' 'true';
        	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        	    # Custom headers and headers various browsers *should* be OK with but aren't
		    add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        	    # Tell client that this pre-flight info is valid for 20 days
	            add_header 'Access-Control-Max-Age' 1728000;
        	    add_header 'Content-Type' 'text/plain charset=UTF-8';
        	    add_header 'Content-Length' 0;
 
	            return 204;
     	        }
 
	        if ($request_method = 'POST') {
 	            add_header 'Access-Control-Allow-Origin' '*';
                    add_header 'Access-Control-Allow-Credentials' 'true';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                    add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     	        }
 
	       if ($request_method = 'GET') {
                   add_header 'Access-Control-Allow-Origin' '*';
                   add_header 'Access-Control-Allow-Credentials' 'true';
                   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                   add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	       }

 	       proxy_pass http://wormbase-development-joachim;
          }

          ##################################################
          # Services shared across development instances
          ##################################################

          # Files in the shared static directory
          location /img-static {
                 root  /usr/local/wormbase/website-shared-files/html;
          }

          # One off hack for NCBI Linkout: 10/2012. Annoying!
          location /images/wdb.gif {
                root  /usr/local/wormbase/website-shared-files/html/img-static/wdb.gif;
          }

          # GBrowse - highly dependent on back end Apache configuration!
          location /tools/genome {
       	        proxy_pass http://wormbase-development-gbrowse/tools/genome;
          }

          location /gbrowse2 {
	         proxy_pass http://wormbase-development-gbrowse/gbrowse2/;
          }
	
          location /gbrowse2/i/ {
	         proxy_pass http://wormbase-development-gbrowse/tools/gbrowse2/i/;
          }

          # The synteny browsing component of GBrowse.
          location /tools/synteny {
	         proxy_pass http://wormbase-development-synteny/tools/synteny;
          }

          # GBrowse, served by a dedicated host.
          location /synteny/images/ {
	         proxy_pass http://wormbase-development-synteny/synteny/images/;
          }

          location /tools/wormmine {
                allow all;
                 proxy_pass http://intermine-production/tools/wormmine;
          }
      }







  ##################################
  #
  #  Frozen releases: all hosted on 
  #     206.108.125.181 (wb-dev2.oicr.on.ca)
  # 
  ##################################
  server {
       listen 80;
       server_name ws100.wormbase.org;
       access_log /usr/local/wormbase/logs/ws100/access_log main;
       error_log  /usr/local/wormbase/logs/ws100/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws100.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws110.wormbase.org;
       access_log /usr/local/wormbase/logs/ws110/access_log main;
       error_log  /usr/local/wormbase/logs/ws110/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws110.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws120.wormbase.org;
       access_log /usr/local/wormbase/logs/ws120/access_log main;
       error_log  /usr/local/wormbase/logs/ws120/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws120.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws130.wormbase.org;
       access_log /usr/local/wormbase/logs/ws130/access_log main;
       error_log  /usr/local/wormbase/logs/ws130/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws130.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws140.wormbase.org;
       access_log /usr/local/wormbase/logs/ws140/access_log main;
       error_log  /usr/local/wormbase/logs/ws140/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws140.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws150.wormbase.org;
       access_log /usr/local/wormbase/logs/ws150/access_log main;
       error_log  /usr/local/wormbase/logs/ws150/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws150.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws160.wormbase.org;
       access_log /usr/local/wormbase/logs/ws160/access_log main;
       error_log  /usr/local/wormbase/logs/ws160/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws160.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws170.wormbase.org;
       access_log /usr/local/wormbase/logs/ws170/access_log main;
       error_log  /usr/local/wormbase/logs/ws170/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws170.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws180.wormbase.org;
       access_log /usr/local/wormbase/logs/ws180/access_log main;
       error_log  /usr/local/wormbase/logs/ws180/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws180.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws190.wormbase.org;
       access_log /usr/local/wormbase/logs/ws190/access_log main;
       error_log  /usr/local/wormbase/logs/ws190/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws190.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws200.wormbase.org;
       access_log /usr/local/wormbase/logs/ws200/access_log main;
       error_log  /usr/local/wormbase/logs/ws200/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws200.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws204.wormbase.org;
       access_log /usr/local/wormbase/logs/ws204/access_log main;
       error_log  /usr/local/wormbase/logs/ws204/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws204.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws205.wormbase.org;
       access_log /usr/local/wormbase/logs/ws205/access_log main;
       error_log  /usr/local/wormbase/logs/ws205/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws205.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws210.wormbase.org;
       access_log /usr/local/wormbase/logs/ws210/access_log main;
       error_log  /usr/local/wormbase/logs/ws210/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws210.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws220.wormbase.org;
       access_log /usr/local/wormbase/logs/ws220/access_log main;
       error_log  /usr/local/wormbase/logs/ws220/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws220.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }

  server {
       listen 80;
       server_name ws225.wormbase.org;
       access_log /usr/local/wormbase/logs/ws225/access_log main;
       error_log  /usr/local/wormbase/logs/ws225/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws225.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;
        }
  }


  server {
       listen 80;
       server_name ws230.wormbase.org;
       access_log /usr/local/wormbase/logs/ws230/access_log main;
       error_log  /usr/local/wormbase/logs/ws230/error_log warn;

      #############################################
      #
      # LOCKDOWN
      #
      #############################################
      # Only requests to our Host are allowed
      if ($host !~ ^(ws230.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

       location / {
	    proxy_pass http://206.108.125.181/;	   
        }
  }





#############################################
#  intermine.wormbase.org
#     PLEASE PRESERVE THIS REDIRECT 
#     TO HANDLE URLs PUBLISHED BEFORE
#     WE SETTLED ON A LOCATION.
#############################################
server {
      server_name intermine.wormbase.org;
      listen 80;
		       
      access_log /usr/local/wormbase/logs/intermine-redirector/cache_log cache;
      access_log /usr/local/wormbase/logs/intermine-redirector/access_log main;
      # Error log; other directives: notice | info
      error_log  /usr/local/wormbase/logs/intermine-redirector/error_log warn;

      # Enable gzip compression
      gzip             on;
      gzip_min_length  1000;
      gzip_proxied     any;
      gzip_types       text/xml text/plain application/xml;

      include       mime.types;
      default_type  application/octet-stream;

      if ($is_bot) {
           return 403; # Please respect the robots.txt file !
      }

      #############################################
      #
      # LOCKDOWN
      #
      #############################################      

      # Only requests to our Host are allowed
      if ($host !~ ^(intermine.wormbase.org)$ ) {
         return 444;
      }

      # Only allow these request methods
      if ($request_method !~ ^(GET|HEAD|POST|PUT)$ ) {
         return 444;
      }

#      return 301 http://www.wormbase.org/tools/wormmine/$request_uri;
      return 301 http://www.wormbase.org/tools/wormmine;


#      location / {
#	    proxy_pass http://206.108.125.180:9002;
#       }

    }




    # Jenkins
    server {
    	   listen 80;
    	   listen [::]:80 default ipv6only=on;
    	   server_name jenkins.wormbase.org;

      	   access_log /usr/local/wormbase/logs/jenkins/cache_log cache  buffer=16k;
      	   access_log /usr/local/wormbase/logs/jenkins/access_log main  buffer=16k;
      	   error_log  /usr/local/wormbase/logs/jenkins/error_log warn;

    	   location / {
           	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	    proxy_set_header Host $http_host;
        	    proxy_redirect off;

        	    if (!-f $request_filename) {
            	       proxy_pass http://jenkins-server;
            	       break;
        	    }
           }
    }
}